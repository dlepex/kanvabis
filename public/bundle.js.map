{"version":3,"file":"bundle.js","sources":["../build/math/Random.js","../node_modules/gl-matrix/src/gl-matrix/common.js","../node_modules/gl-matrix/src/gl-matrix/vec2.js","../build/math/math.js","../build/math/vec2.js","../build/math/bbox.js","../build/phys/body.js","../build/phys/interact.js","../build/commons/prelude.js","../build/phys/world.js","../build/vendor/kdbush/sort.js","../build/vendor/kdbush/range.js","../build/vendor/kdbush/within.js","../build/vendor/kdbush/index.js","../node_modules/quickselect/quickselect.js","../build/vendor/rbush/index.js","../build/phys/detector.js","../build/phys/phys.js","../build/commons/collections.js","../build/scenes/proximal.js","../build/index.js"],"sourcesContent":["// \"rich random\"\nexport class Random {\n    constructor(rfn = Math.random) {\n        this.rfn = rfn;\n    }\n    /** from <= result < to */\n    number(from, to) {\n        return from + this.rfn() * (to - from);\n    }\n    /** from <= result < to */\n    int(from, to) {\n        return Math.floor(from + this.rfn() * (to - from));\n    }\n    color() {\n        const f = this.rfn;\n        return 'rgb(' + (Math.floor(f() * 256)) + ',' + (Math.floor(f() * 256)) + ',' + (Math.floor(f() * 256)) + ')';\n    }\n}\n//# sourceMappingURL=Random.js.map","/**\n * Common utilities\n * @module glMatrix\n */\n\n// Configuration Constants\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = (typeof Float32Array !== 'undefined') ? Float32Array : Array;\nexport const RANDOM = Math.random;\n\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Type} type Array type, such as Float32Array or Array\n */\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\n\nconst degree = Math.PI / 180;\n\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\nexport function toRadian(a) {\n  return a * degree;\n}\n\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON*Math.max(1.0, Math.abs(a), Math.abs(b));\n}\n","import * as glMatrix from \"./common.js\";\n\n/**\n * 2 Dimensional Vector\n * @module vec2\n */\n\n/**\n * Creates a new, empty vec2\n *\n * @returns {vec2} a new 2D vector\n */\nexport function create() {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  if(glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n  }\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with values from an existing vector\n *\n * @param {vec2} a vector to clone\n * @returns {vec2} a new 2D vector\n */\nexport function clone(a) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Creates a new vec2 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} a new 2D vector\n */\nexport function fromValues(x, y) {\n  let out = new glMatrix.ARRAY_TYPE(2);\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Copy the values from one vec2 to another\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the source vector\n * @returns {vec2} out\n */\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  return out;\n}\n\n/**\n * Set the components of a vec2 to the given values\n *\n * @param {vec2} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @returns {vec2} out\n */\nexport function set(out, x, y) {\n  out[0] = x;\n  out[1] = y;\n  return out;\n}\n\n/**\n * Adds two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  return out;\n}\n\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  return out;\n}\n\n/**\n * Multiplies two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  return out;\n}\n\n/**\n * Divides two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  return out;\n}\n\n/**\n * Math.ceil the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to ceil\n * @returns {vec2} out\n */\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  return out;\n}\n\n/**\n * Math.floor the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to floor\n * @returns {vec2} out\n */\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  return out;\n}\n\n/**\n * Returns the minimum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  return out;\n}\n\n/**\n * Returns the maximum of two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec2} out\n */\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  return out;\n}\n\n/**\n * Math.round the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to round\n * @returns {vec2} out\n */\nexport function round (out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  return out;\n}\n\n/**\n * Scales a vec2 by a scalar number\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec2} out\n */\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  return out;\n}\n\n/**\n * Adds two vec2's after scaling the second operand by a scalar value\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec2} out\n */\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + (b[0] * scale);\n  out[1] = a[1] + (b[1] * scale);\n  return out;\n}\n\n/**\n * Calculates the euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} distance between a and b\n */\nexport function distance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared euclidian distance between two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} squared distance between a and b\n */\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0],\n    y = b[1] - a[1];\n  return x*x + y*y;\n}\n\n/**\n * Calculates the length of a vec2\n *\n * @param {vec2} a vector to calculate length of\n * @returns {Number} length of a\n */\nexport function length(a) {\n  var x = a[0],\n    y = a[1];\n  return Math.sqrt(x*x + y*y);\n}\n\n/**\n * Calculates the squared length of a vec2\n *\n * @param {vec2} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\nexport function squaredLength (a) {\n  var x = a[0],\n    y = a[1];\n  return x*x + y*y;\n}\n\n/**\n * Negates the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to negate\n * @returns {vec2} out\n */\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  return out;\n}\n\n/**\n * Returns the inverse of the components of a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to invert\n * @returns {vec2} out\n */\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  return out;\n}\n\n/**\n * Normalize a vec2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a vector to normalize\n * @returns {vec2} out\n */\nexport function normalize(out, a) {\n  var x = a[0],\n    y = a[1];\n  var len = x*x + y*y;\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n    out[0] = a[0] * len;\n    out[1] = a[1] * len;\n  }\n  return out;\n}\n\n/**\n * Calculates the dot product of two vec2's\n *\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {Number} dot product of a and b\n */\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1];\n}\n\n/**\n * Computes the cross product of two vec2's\n * Note that the cross product must by definition produce a 3D vector\n *\n * @param {vec3} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @returns {vec3} out\n */\nexport function cross(out, a, b) {\n  var z = a[0] * b[1] - a[1] * b[0];\n  out[0] = out[1] = 0;\n  out[2] = z;\n  return out;\n}\n\n/**\n * Performs a linear interpolation between two vec2's\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the first operand\n * @param {vec2} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec2} out\n */\nexport function lerp(out, a, b, t) {\n  var ax = a[0],\n    ay = a[1];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  return out;\n}\n\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec2} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec2} out\n */\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  out[0] = Math.cos(r) * scale;\n  out[1] = Math.sin(r) * scale;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y;\n  out[1] = m[1] * x + m[3] * y;\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat2d\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat2d} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat2d(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[2] * y + m[4];\n  out[1] = m[1] * x + m[3] * y + m[5];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat3\n * 3rd vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat3} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n    y = a[1];\n  out[0] = m[0] * x + m[3] * y + m[6];\n  out[1] = m[1] * x + m[4] * y + m[7];\n  return out;\n}\n\n/**\n * Transforms the vec2 with a mat4\n * 3rd vector component is implicitly '0'\n * 4th vector component is implicitly '1'\n *\n * @param {vec2} out the receiving vector\n * @param {vec2} a the vector to transform\n * @param {mat4} m matrix to transform with\n * @returns {vec2} out\n */\nexport function transformMat4(out, a, m) {\n  let x = a[0];\n  let y = a[1];\n  out[0] = m[0] * x + m[4] * y + m[12];\n  out[1] = m[1] * x + m[5] * y + m[13];\n  return out;\n}\n\n/**\n * Rotate a 2D vector\n * @param {vec2} out The receiving vec2\n * @param {vec2} a The vec2 point to rotate\n * @param {vec2} b The origin of the rotation\n * @param {Number} c The angle of rotation\n * @returns {vec2} out\n */\nexport function rotate(out, a, b, c) {\n  //Translate point to the origin\n  let p0 = a[0] - b[0],\n  p1 = a[1] - b[1],\n  sinC = Math.sin(c),\n  cosC = Math.cos(c);\n  \n  //perform rotation and translate to correct position\n  out[0] = p0*cosC - p1*sinC + b[0];\n  out[1] = p0*sinC + p1*cosC + b[1];\n\n  return out;\n}\n\n/**\n * Get the angle between two 2D vectors\n * @param {vec2} a The first operand\n * @param {vec2} b The second operand\n * @returns {Number} The angle in radians\n */\nexport function angle(a, b) {\n  let x1 = a[0],\n    y1 = a[1],\n    x2 = b[0],\n    y2 = b[1];\n  \n  let len1 = x1*x1 + y1*y1;\n  if (len1 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len1 = 1 / Math.sqrt(len1);\n  }\n  \n  let len2 = x2*x2 + y2*y2;\n  if (len2 > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len2 = 1 / Math.sqrt(len2);\n  }\n  \n  let cosine = (x1 * x2 + y1 * y2) * len1 * len2;\n  \n  \n  if(cosine > 1.0) {\n    return 0;\n  }\n  else if(cosine < -1.0) {\n    return Math.PI;\n  } else {\n    return Math.acos(cosine);\n  }\n}\n\n/**\n * Returns a string representation of a vector\n *\n * @param {vec2} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\nexport function str(a) {\n  return 'vec2(' + a[0] + ', ' + a[1] + ')';\n}\n\n/**\n * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1];\n}\n\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {vec2} a The first vector.\n * @param {vec2} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\nexport function equals(a, b) {\n  let a0 = a[0], a1 = a[1];\n  let b0 = b[0], b1 = b[1];\n  return (Math.abs(a0 - b0) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\n          Math.abs(a1 - b1) <= glMatrix.EPSILON*Math.max(1.0, Math.abs(a1), Math.abs(b1)));\n}\n\n/**\n * Alias for {@link vec2.length}\n * @function\n */\nexport const len = length;\n\n/**\n * Alias for {@link vec2.subtract}\n * @function\n */\nexport const sub = subtract;\n\n/**\n * Alias for {@link vec2.multiply}\n * @function\n */\nexport const mul = multiply;\n\n/**\n * Alias for {@link vec2.divide}\n * @function\n */\nexport const div = divide;\n\n/**\n * Alias for {@link vec2.distance}\n * @function\n */\nexport const dist = distance;\n\n/**\n * Alias for {@link vec2.squaredDistance}\n * @function\n */\nexport const sqrDist = squaredDistance;\n\n/**\n * Alias for {@link vec2.squaredLength}\n * @function\n */\nexport const sqrLen = squaredLength;\n\n/**\n * Perform some operation over an array of vec2s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\nexport const forEach = (function() {\n  let vec = create();\n\n  return function(a, stride, offset, count, fn, arg) {\n    let i, l;\n    if(!stride) {\n      stride = 2;\n    }\n\n    if(!offset) {\n      offset = 0;\n    }\n\n    if(count) {\n      l = Math.min((count * stride) + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for(i = offset; i < l; i += stride) {\n      vec[0] = a[i]; vec[1] = a[i+1];\n      fn(vec, vec, arg);\n      a[i] = vec[0]; a[i+1] = vec[1];\n    }\n\n    return a;\n  };\n})();\n","export const EPSILON = 0.000001;\nexport const degree = Math.PI / 180;\n//# sourceMappingURL=math.js.map","import * as glMatrix from \"gl-matrix/src/gl-matrix/common\";\nimport * as vec from \"gl-matrix/src/gl-matrix/vec2\";\nimport { EPSILON } from './math';\n// INIT {{\nglMatrix.setMatrixArrayType(Float64Array);\n// }}\nexport function create(x = 0.0, y = 0.0) {\n    return new Float64Array([x, y]);\n}\nexport const mk = create;\nexport const dot = vec.dot;\nexport const dist = vec.dist;\nexport const eq = vec.exactEquals;\nexport const eqEps = vec.equals;\nexport const sqrDist = vec.sqrDist;\nexport const scale = vec.scale;\nexport const add = vec.add;\nexport const addScale = vec.scaleAndAdd;\nexport const subtract = vec.subtract;\nexport const negate = vec.negate;\nexport const normalize = vec.normalize;\nexport const neg = negate;\nexport const len = vec.len;\nexport const sqrLen = vec.sqrLen;\nexport function fromCoords(out) {\n    return create(out.x, out.y);\n}\nexport function set(out, x, y) {\n    out[0] = x;\n    out[1] = y;\n    return out;\n}\nexport function copy(out, s) {\n    out[0] = s[0];\n    out[1] = s[1];\n    return out;\n}\nexport function cloneOr0(s) {\n    return copyIfExists(vec.create(), s);\n}\nexport function clone(s) {\n    return copy(vec.create(), s);\n}\nexport function copyIfExists(out, s) {\n    if (s !== undefined) {\n        out[0] = s[0];\n        out[1] = s[1];\n    }\n    return out;\n}\nexport function inc(out, s) {\n    out[0] += s[0];\n    out[1] += s[1];\n    return out;\n}\nexport function scaleBy(out, k) {\n    out[0] *= k;\n    out[1] *= k;\n    return out;\n}\nexport function incScale(out, s, k) {\n    out[0] += k * s[0];\n    out[1] += k * s[1];\n    return out;\n}\nexport function dec(out, s) {\n    out[0] -= s[0];\n    out[1] -= s[1];\n    return out;\n}\nexport function decScale(out, s, k) {\n    out[0] -= k * s[0];\n    out[1] -= k * s[1];\n    return out;\n}\nexport function isZeroEps(v, eps = EPSILON) {\n    return Math.abs(v[0]) < eps && Math.abs(v[1]) < eps;\n}\nexport function isZero(v) {\n    return v[0] === 0 && v[1] === 0;\n}\nexport function setLen(out, newlen = 1) {\n    const l = len(out);\n    if (l === 0)\n        return false;\n    const k = newlen / l;\n    out[0] *= k;\n    out[1] *= k;\n    return true;\n}\nexport function copyToCoords(out, v) {\n    out.x = v[0];\n    out.y = v[1];\n    return out;\n}\nexport function toCoords(v) {\n    return { x: v[0], y: v[1] };\n}\n/** random vector of length = 1 */\nexport function setRand1(r, out) {\n    const phi = r.rfn() * (2 * Math.PI);\n    out[0] = Math.cos(phi);\n    out[1] = Math.sin(phi);\n    return out;\n}\nexport function setRandLen(r, out, minLen, maxLen) {\n    return scaleBy(setRand1(r, out), r.number(minLen, maxLen));\n}\n//# sourceMappingURL=vec2.js.map","export function create(x1 = 0, y1 = 0, x2 = 0, y2 = 0) {\n    return [x1, y1, x2, y2];\n}\nexport function set(out, x1, y1, x2, y2) {\n    out[0] = x1;\n    out[1] = y1;\n    out[2] = x2;\n    out[3] = y2;\n}\nexport function area(a) {\n    return (a[2] - a[0]) * (a[3] - a[1]);\n}\nexport function intersect(a, b, out) {\n    const x1 = Math.max(a[0], b[0]);\n    const y1 = Math.max(a[1], b[1]);\n    const x2 = Math.min(a[2], b[2]);\n    const y2 = Math.min(a[3], b[3]);\n    if (x1 > x2 || y1 > y2)\n        return false;\n    if (out !== undefined) {\n        set(out, x1, y1, x2, y2);\n    }\n    return true;\n}\nexport function setCenter(out, x, y, w, h) {\n    w = w / 2;\n    h = h / 2;\n    set(out, x - w, y - h, x + w, y + h);\n}\nexport function setCenterVec(out, c, size) {\n    setCenter(out, c[0], c[1], size[0], size[1]);\n}\n//# sourceMappingURL=bbox.js.map","import * as vec from \"math/vec2\";\n/**\n * Physical Properties of a PointMass/Particle\n */\nexport class PointMass {\n    constructor(p) {\n        this.id = 0;\n        this.coords = vec.cloneOr0(p.coords);\n        this.vel = vec.cloneOr0(p.vel);\n        this.force = vec.cloneOr0(p.force);\n        this.mass = p.mass || 1;\n    }\n    applyForce(f) { vec.inc(this.force, f); }\n    get velScalar() { return vec.len(this.vel); }\n    _move(p) {\n        const moveFn = p.coordsModifier;\n        const f = this.force;\n        const v = this.vel;\n        // v = v + a*dt; where a = F/m, m = mass*world.massCoef\n        if (!vec.isZero(f))\n            vec.inc(v, vec.scaleBy(f, p.dt / (p.massCoef * this.mass)));\n        if (p.velModifier !== undefined)\n            p.velModifier(this, p);\n        if (vec.isZero(v))\n            return;\n        moveFn(this, p);\n    }\n}\nexport class CoordMods {\n    static non(b, p) {\n        const pos = b.coords, v = b.vel, w = p.w, h = p.h;\n        vec.incScale(pos, v, p.dt);\n    }\n    static walls(b, p) {\n        const pos = b.coords, v = b.vel, x = pos[0], y = pos[1];\n        vec.incScale(pos, v, p.dt);\n        const vx = v[0], vy = v[1];\n        if ((x < 0 && vx < 0) || (x > p.w && vx > 0)) {\n            v[0] *= -1;\n        }\n        if ((y < 0 && vy < 0) || (y > p.h && vy > 0)) {\n            v[1] *= -1;\n        }\n    }\n    static modulo(b, p) {\n        const pos = b.coords, v = b.vel, w = p.w, h = p.h;\n        vec.incScale(pos, v, p.dt);\n        pos[0] = (pos[0] + (w << 8)) % w;\n        pos[1] = (pos[1] + (h << 8)) % h;\n    }\n}\nexport class VelMods {\n    static limit(min, max, rng) {\n        return function (b, p) {\n            const v = b.velScalar;\n            if (v < min) {\n                if (v === 0) {\n                    vec.setRand1(rng, b.vel);\n                }\n                vec.setLen(b.vel, min);\n                return;\n            }\n            if (v > max) {\n                vec.setLen(b.vel, max);\n                return;\n            }\n        };\n    }\n    static friction(threshold, coef) {\n        return function (b, p) {\n            if (b.velScalar > threshold) {\n                vec.scaleBy(b.vel, 1 - coef);\n            }\n        };\n    }\n    static compose2(f1, f2) {\n        return function (b, p) {\n            f1(b, p);\n            f2(b, p);\n        };\n    }\n    static compose(...funcs) {\n        return function (b, p) {\n            for (const f of funcs) {\n                f(b, p);\n            }\n        };\n    }\n}\n//# sourceMappingURL=body.js.map","import * as vec from \"math/vec2\";\n/**\n * Undirected interactions graph, represented as edge set.\n */\nexport class InterGraph {\n    constructor() {\n        this.set = new Set();\n    }\n    clear() { this.set.clear(); }\n    static key(a, b) {\n        if (a > b) {\n            const t = a;\n            a = b;\n            b = t;\n        }\n        return (a << 25) + b;\n    }\n    hasKey(k) {\n        return this.set.has(k);\n    }\n    delete(k) { return this.set.delete(k); }\n    has(a, b) { return this.set.has(InterGraph.key(a, b)); }\n    /**\n     * @returns !has(k) before addition\n     */\n    addKey(k) {\n        const set = this.set;\n        if (!set.has(k)) {\n            set.add(k);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    add(a, b) { return this.addKey(InterGraph.key(a, b)); }\n    forEach(cb) {\n        this.set.forEach((key) => {\n            const mask = (1 << 26) - 1;\n            const b = key & mask, a = (key >> 25) & mask;\n            cb(a, b, key);\n        });\n    }\n}\nInterGraph.keyMask = (1 << 26) - 1;\nexport function interGraphAsProvider(ig, byID) {\n    return {\n        noDedup: true,\n        forEach(interact) {\n            ig.forEach((aid, bid) => interact(byID(aid), byID(bid)));\n        }\n    };\n}\nconst dedupGraph = new InterGraph();\nfunction graphsHas(graphs, key) {\n    return graphs.some(g => g.hasKey(key));\n}\nexport function interLauncher(c) {\n    const pr = c.detect;\n    const interact = c.interact;\n    let exclude;\n    const before = c.before;\n    if (c.exclude) {\n        if (Array.isArray(c.exclude))\n            exclude = c.exclude;\n        else\n            exclude = [c.exclude];\n    }\n    if (pr.noDedup) {\n        return () => {\n            if (before !== undefined)\n                before();\n            pr.forEach((a, b) => {\n                const k = InterGraph.key(a.phys.id, b.phys.id);\n                if (exclude === undefined || !graphsHas(exclude, k)) {\n                    interact(a, b);\n                }\n            });\n        };\n    }\n    else {\n        return () => {\n            if (before !== undefined)\n                before();\n            dedupGraph.clear(); // reusing global dedup graph!\n            pr.forEach((a, b) => {\n                const k = InterGraph.key(a.phys.id, b.phys.id);\n                if ((exclude === undefined || !graphsHas(exclude, k)) && dedupGraph.addKey(k)) {\n                    interact(a, b);\n                }\n            });\n        };\n    }\n}\nexport class MutualForce {\n    constructor(rng) {\n        this.rng = rng;\n        this.dist = 0;\n        this.coordsDif = vec.create();\n    }\n    init(a, b) {\n        this.a = a;\n        this.b = b;\n        vec.subtract(this.coordsDif, b.phys.coords, a.phys.coords);\n        this.dist = vec.len(this.coordsDif);\n        return this;\n    }\n    /**\n     * @param scalar if positive - mutual attraction, else - repulsion\n     */\n    apply(scalar) {\n        if (scalar === 0)\n            return;\n        const f = this.coordsDif;\n        const d = this.dist;\n        if (d !== 0) {\n            vec.scaleBy(f, scalar / this.dist);\n        }\n        else {\n            vec.scaleBy(vec.setRand1(this.rng, f), scalar);\n        }\n        this.a.phys.applyForce(f);\n        vec.neg(f, f);\n        this.b.phys.applyForce(f);\n    }\n}\nexport class ElasticCollideCalc {\n    constructor(rng) {\n        this.rng = rng;\n        this.n = vec.create();\n        this.dn = vec.create();\n        this.dv = vec.create();\n    }\n    _normalToCollisionLine(a, b, n) {\n        if (n === undefined) {\n            n = vec.subtract(this.n, a.coords, b.coords); // normal to \"collision line\"\n        }\n        else {\n            n = vec.copy(this.n, n);\n        }\n        if (!vec.isZero(n))\n            vec.normalize(n, n);\n        else\n            vec.setRand1(this.rng, n);\n        return n;\n    }\n    central(a, b, n) {\n        n = this._normalToCollisionLine(a, b, n);\n        const va = vec.len(a.vel), vb = vec.len(b.vel);\n        const ma = a.mass, mb = b.mass, m = ma + mb, dm = ma - mb;\n        // result speeds after collision\n        const ua = (va * dm + 2 * mb * vb) / m;\n        const ub = (-vb * dm + 2 * ma * va) / m;\n        vec.scale(a.vel, n, ua);\n        vec.scale(b.vel, n, -ub);\n    }\n    nonCentral(a, b, n) {\n        n = this._normalToCollisionLine(a, b, n);\n        const ma = a.mass, mb = b.mass, m = ma + mb;\n        let v = a.vel;\n        const dv = vec.subtract(this.dv, a.vel, b.vel);\n        const dn = vec.scale(this.dn, n, 2 * vec.dot(n, dv) * (mb / m));\n        vec.subtract(v, v, dn);\n        v = b.vel;\n        vec.neg(n, n);\n        vec.neg(dv, dv);\n        vec.subtract(v, v, vec.scale(dn, n, 2 * vec.dot(n, dv) * (ma / m)));\n    }\n}\n//# sourceMappingURL=interact.js.map","// Most common utilities.\nexport function castMutable(o) { return o; }\nexport function assert(cond, msg, ...args) {\n    if (!cond) {\n        const m = (typeof msg === 'function') ? msg() : msg;\n        console.error(m, args);\n        throw StdErr.assertFail(m);\n    }\n}\nexport function nonNull(value, valueName) {\n    if (value == null) {\n        let m = `Value ${valueName} is _undefined_ or _null_`;\n        console.error(\"\");\n        throw StdErr.assertFail(m);\n    }\n    return value;\n}\nexport const jsonStr = JSON.stringify;\nexport const isArray = Array.isArray;\nexport class StdErr {\n    static badArg(arg, expectedValueMsg, gotValue) {\n        let m = `arg '${arg}': ${expectedValueMsg}`;\n        if (gotValue !== undefined) {\n            m += `. got: ${gotValue}`;\n        }\n        return { name: 'BadArgError', message: m };\n    }\n    static assertFail(msg) {\n        return { name: 'AssertFailError', message: msg };\n    }\n}\nexport function toInt32(v) {\n    return v >> 0;\n}\nfunction getTrace(name) {\n    if (!UtilStdLoggerTrace) {\n        return undefined;\n    }\n    const f = UtilStdLoggerTrace[name];\n    if (!f) {\n        return undefined;\n    }\n    return console.log;\n}\nconst emptyLoggerFn = () => { };\nexport function getLogger(name) {\n    const trace = getTrace(name);\n    return { trace: trace || emptyLoggerFn, isTraceOn: !!trace };\n}\n//# sourceMappingURL=prelude.js.map","import { assert, castMutable } from \"commons/prelude\";\nimport { Random } from \"math/Random\";\nimport * as vec from \"math/vec2\";\nimport { CoordMods } from \"./body\";\nimport { interLauncher } from \"./interact\";\nexport class World {\n    constructor(c) {\n        this._deleteListeners = [];\n        this._inters = [];\n        this._idCounter = 1;\n        this.rng = new Random();\n        this.coordsModifier = CoordMods.walls;\n        this.massCoef = 1.0;\n        this.size = vec.clone(c.size);\n        const bodiesMap = new Map();\n        this._idBodyMap = bodiesMap;\n        this.get = (id) => bodiesMap.get(id);\n        this.bodies = {\n            [Symbol.iterator]() { return bodiesMap.values(); }\n        };\n        this._moveParams = {\n            w: this.size[0],\n            h: this.size[1],\n            time: 0,\n            dt: 0,\n            step: -1,\n            massCoef: this.massCoef,\n            coordsModifier: this.coordsModifier\n        };\n    }\n    rngCoords(dx, dy) {\n        dx = dx || this.size[0] / 10;\n        dy = dy || this.size[1] / 10;\n        const v = vec.create();\n        v[0] = this.rng.number(dx, this.size[0] - dx);\n        v[1] = this.rng.number(dy, this.size[1] - dy);\n        return v;\n    }\n    get step() { return this._moveParams.step; }\n    nextStep(dt) {\n        const mp = this._moveParams;\n        mp.dt = dt;\n        mp.time += dt;\n        mp.step++;\n        mp.massCoef = this.massCoef;\n        // 1. apply bodies interactions (collisions/repulsions/attractions etc)\n        for (const inter of this._inters) {\n            inter._launch();\n        }\n        // 2. move bodies\n        for (const b of this.bodies) {\n            if (b.onBeforeMove !== undefined)\n                b.onBeforeMove(mp);\n            if (b.stationary)\n                continue;\n            mp.coordsModifier = b.coordsModifier || this.coordsModifier;\n            mp.velModifier = b.velModifier || this.velModifier;\n            const movable = b.phys;\n            movable._move(mp);\n            vec.set(b.phys.force, 0, 0);\n        }\n    }\n    add(b) {\n        assert(b.phys.id === 0, \"body is already attached\");\n        const id = this._idCounter++;\n        castMutable(b.phys).id = id;\n        this._idBodyMap.set(id, b);\n        return b;\n    }\n    delete(b) {\n        if (b.phys.id === 0)\n            return true; // detached body.\n        for (const dl of this._deleteListeners) {\n            dl(b);\n        }\n        this._idBodyMap.delete(b.phys.id);\n        castMutable(b.phys).id = 0;\n        return true;\n    }\n    addDeleteListener(listener) {\n        this._deleteListeners.push(listener);\n    }\n    newBodySet() {\n        const s = new Set();\n        this.addDeleteListener((b) => s.delete(b));\n        return s;\n    }\n    addInteraction(inter) {\n        assert(this._inters.every(i => i !== inter), \"repeated interaction\");\n        const r = inter;\n        r._launch = interLauncher(inter);\n        this._inters.push(r);\n    }\n    deleteInteraction(inter) {\n        this._inters = this._inters.filter(i => i !== inter);\n    }\n}\n//# sourceMappingURL=world.js.map","export default function sortKD(ids, coords, nodeSize, left, right, axis) {\n    if (right - left <= nodeSize)\n        return;\n    const m = (left + right) >> 1; // middle index\n    // sort ids and coords around the middle index so that the halves lie\n    // either left/right or top/bottom correspondingly (taking turns)\n    select(ids, coords, m, left, right, axis);\n    // recursively kd-sort first half and second half on the opposite axis\n    sortKD(ids, coords, nodeSize, left, m - 1, 1 - axis);\n    sortKD(ids, coords, nodeSize, m + 1, right, 1 - axis);\n}\n// custom Floyd-Rivest selection algorithm: sort ids and coords so that\n// [left..k-1] items are smaller than k-th item (on either x or y axis)\nfunction select(ids, coords, k, left, right, axis) {\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            select(ids, coords, k, newLeft, newRight, axis);\n        }\n        const t = coords[2 * k + axis];\n        let i = left;\n        let j = right;\n        swapItem(ids, coords, left, k);\n        if (coords[2 * right + axis] > t)\n            swapItem(ids, coords, left, right);\n        while (i < j) {\n            swapItem(ids, coords, i, j);\n            i++;\n            j--;\n            while (coords[2 * i + axis] < t)\n                i++;\n            while (coords[2 * j + axis] > t)\n                j--;\n        }\n        if (coords[2 * left + axis] === t)\n            swapItem(ids, coords, left, j);\n        else {\n            j++;\n            swapItem(ids, coords, j, right);\n        }\n        if (j <= k)\n            left = j + 1;\n        if (k <= j)\n            right = j - 1;\n    }\n}\nfunction swapItem(ids, coords, i, j) {\n    swap(ids, i, j);\n    swap(coords, 2 * i, 2 * j);\n    swap(coords, 2 * i + 1, 2 * j + 1);\n}\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n//# sourceMappingURL=sort.js.map","export default function range(ids, coords, minX, minY, maxX, maxY, nodeSize, result = []) {\n    const stack = [0, ids.length - 1, 0];\n    // recursively search for items in range in the kd-sorted arrays\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n        // if we reached \"tree node\", search linearly\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                const x = coords[2 * i];\n                const y = coords[2 * i + 1];\n                if (x >= minX && x <= maxX && y >= minY && y <= maxY)\n                    result.push(ids[i]);\n            }\n            continue;\n        }\n        // otherwise find the middle index\n        const m = (left + right) >> 1;\n        // include the middle item if it's in range\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n        if (x >= minX && x <= maxX && y >= minY && y <= maxY)\n            result.push(ids[m]);\n        // queue search in halves that intersect the query\n        if (axis === 0 ? minX <= x : minY <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(1 - axis);\n        }\n        if (axis === 0 ? maxX >= x : maxY >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(1 - axis);\n        }\n    }\n    return result;\n}\n//# sourceMappingURL=range.js.map","export default function within(ids, coords, qx, qy, r, nodeSize, result = []) {\n    const stack = [0, ids.length - 1, 0];\n    const r2 = r * r;\n    // recursively search for items within radius in the kd-sorted arrays\n    while (stack.length) {\n        const axis = stack.pop();\n        const right = stack.pop();\n        const left = stack.pop();\n        // if we reached \"tree node\", search linearly\n        if (right - left <= nodeSize) {\n            for (let i = left; i <= right; i++) {\n                if (sqDist(coords[2 * i], coords[2 * i + 1], qx, qy) <= r2)\n                    result.push(ids[i]);\n            }\n            continue;\n        }\n        // otherwise find the middle index\n        const m = (left + right) >> 1;\n        // include the middle item if it's in range\n        const x = coords[2 * m];\n        const y = coords[2 * m + 1];\n        if (sqDist(x, y, qx, qy) <= r2)\n            result.push(ids[m]);\n        // queue search in halves that intersect the query\n        if (axis === 0 ? qx - r <= x : qy - r <= y) {\n            stack.push(left);\n            stack.push(m - 1);\n            stack.push(1 - axis);\n        }\n        if (axis === 0 ? qx + r >= x : qy + r >= y) {\n            stack.push(m + 1);\n            stack.push(right);\n            stack.push(1 - axis);\n        }\n    }\n    return result;\n}\nfunction sqDist(ax, ay, bx, by) {\n    const dx = ax - bx;\n    const dy = ay - by;\n    return dx * dx + dy * dy;\n}\n//# sourceMappingURL=within.js.map","import sort from './sort';\nimport range from './range';\nimport within from './within';\nconst defaultGetX = p => p[0];\nconst defaultGetY = p => p[1];\nexport default class KDBush {\n    constructor(points, getX = defaultGetX, getY = defaultGetY, nodeSize = 64, ArrayType = Float64Array) {\n        this.nodeSize = nodeSize;\n        this.points = points;\n        const IndexArrayType = points.length < 65536 ? Uint16Array : Uint32Array;\n        // store indices to the input array and coordinates in separate typed arrays\n        const ids = this.ids = new IndexArrayType(points.length);\n        const coords = this.coords = new ArrayType(points.length * 2);\n        for (let i = 0; i < points.length; i++) {\n            ids[i] = i;\n            coords[2 * i] = getX(points[i]);\n            coords[2 * i + 1] = getY(points[i]);\n        }\n        // kd-sort both arrays for efficient search (see comments in sort.js)\n        sort(ids, coords, nodeSize, 0, ids.length - 1, 0);\n    }\n    range(minX, minY, maxX, maxY, result = []) {\n        return range(this.ids, this.coords, minX, minY, maxX, maxY, this.nodeSize, result);\n    }\n    within(x, y, r, result = []) {\n        return within(this.ids, this.coords, x, y, r, this.nodeSize, result);\n    }\n}\n//# sourceMappingURL=index.js.map","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.quickselect = factory());\n}(this, (function () { 'use strict';\n\nfunction quickselect(arr, k, left, right, compare) {\n    quickselectStep(arr, k, left || 0, right || (arr.length - 1), compare || defaultCompare);\n}\n\nfunction quickselectStep(arr, k, left, right, compare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            var n = right - left + 1;\n            var m = k - left + 1;\n            var z = Math.log(n);\n            var s = 0.5 * Math.exp(2 * z / 3);\n            var sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            var newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            var newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselectStep(arr, k, newLeft, newRight, compare);\n        }\n\n        var t = arr[k];\n        var i = left;\n        var j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\nfunction swap(arr, i, j) {\n    var tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n\nreturn quickselect;\n\n})));\n","'use strict';\nimport quickselect from 'quickselect';\nexport function rbush(maxEntries, format) {\n    if (!(this instanceof rbush))\n        return new rbush(maxEntries, format);\n    // max entries in a node is 9 by default; min node fill is 40% for best performance\n    this._maxEntries = Math.max(4, maxEntries || 9);\n    this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n    if (format) {\n        this._initFormat(format);\n    }\n    this.clear();\n}\nrbush.prototype = {\n    all: function () {\n        return this._all(this.data, []);\n    },\n    search: function (bbox, result = []) {\n        var node = this.data, toBBox = this.toBBox;\n        if (!intersects(bbox, node))\n            return result;\n        var nodesToSearch = [], i, len, child, childBBox;\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf)\n                        result.push(child);\n                    else if (contains(bbox, childBBox))\n                        this._all(child, result);\n                    else\n                        nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n    collides: function (bbox) {\n        var node = this.data, toBBox = this.toBBox;\n        if (!intersects(bbox, node))\n            return false;\n        var nodesToSearch = [], i, len, child, childBBox;\n        while (node) {\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                childBBox = node.leaf ? toBBox(child) : child;\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox))\n                        return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n        return false;\n    },\n    load: function (data) {\n        if (!(data && data.length))\n            return this;\n        if (data.length < this._minEntries) {\n            for (var i = 0, len = data.length; i < len; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        var node = this._build(data.slice(), 0, data.length - 1, 0);\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n        }\n        else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n        }\n        else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                var tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n        return this;\n    },\n    insert: function (item) {\n        if (item)\n            this._insert(item, this.data.height - 1);\n        return this;\n    },\n    clear: function () {\n        this.data = createNode([]);\n        return this;\n    },\n    remove: function (item, equalsFn) {\n        if (!item)\n            return this;\n        var node = this.data, bbox = this.toBBox(item), path = [], indexes = [], i, parent, index, goingUp;\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n            if (node.leaf) { // check current node\n                index = findItem(item, node.children, equalsFn);\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n            }\n            else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n            }\n            else\n                node = null; // nothing found\n        }\n        return this;\n    },\n    toBBox: function (item) { return item; },\n    compareMinX: compareNodeMinX,\n    compareMinY: compareNodeMinY,\n    toJSON: function () { return this.data; },\n    fromJSON: function (data) {\n        this.data = data;\n        return this;\n    },\n    _all: function (node, result) {\n        var nodesToSearch = [];\n        while (node) {\n            if (node.leaf)\n                result.push.apply(result, node.children);\n            else\n                nodesToSearch.push.apply(nodesToSearch, node.children);\n            node = nodesToSearch.pop();\n        }\n        return result;\n    },\n    _build: function (items, left, right, height) {\n        var N = right - left + 1, M = this._maxEntries, node;\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n        // split the items into M mostly square tiles\n        var N2 = Math.ceil(N / M), N1 = N2 * Math.ceil(Math.sqrt(M)), i, j, right2, right3;\n        multiSelect(items, left, right, N1, this.compareMinX);\n        for (i = left; i <= right; i += N1) {\n            right2 = Math.min(i + N1 - 1, right);\n            multiSelect(items, i, right2, N2, this.compareMinY);\n            for (j = i; j <= right2; j += N2) {\n                right3 = Math.min(j + N2 - 1, right2);\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n        calcBBox(node, this.toBBox);\n        return node;\n    },\n    _chooseSubtree: function (bbox, node, level, path) {\n        var i, len, child, targetNode, area, enlargement, minArea, minEnlargement;\n        while (true) {\n            path.push(node);\n            if (node.leaf || path.length - 1 === level)\n                break;\n            minArea = minEnlargement = Infinity;\n            for (i = 0, len = node.children.length; i < len; i++) {\n                child = node.children[i];\n                area = bboxArea(child);\n                enlargement = enlargedArea(bbox, child) - area;\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n                }\n                else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n            node = targetNode || node.children[0];\n        }\n        return node;\n    },\n    _insert: function (item, level, isNode) {\n        var toBBox = this.toBBox, bbox = isNode ? item : toBBox(item), insertPath = [];\n        // find the best node for accommodating the item, saving all nodes along the path too\n        var node = this._chooseSubtree(bbox, this.data, level, insertPath);\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            }\n            else\n                break;\n        }\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    },\n    // split overflowed node into two\n    _split: function (insertPath, level) {\n        var node = insertPath[level], M = node.children.length, m = this._minEntries;\n        this._chooseSplitAxis(node, m, M);\n        var splitIndex = this._chooseSplitIndex(node, m, M);\n        var newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n        if (level)\n            insertPath[level - 1].children.push(newNode);\n        else\n            this._splitRoot(node, newNode);\n    },\n    _splitRoot: function (node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    },\n    _chooseSplitIndex: function (node, m, M) {\n        var i, bbox1, bbox2, overlap, area, minOverlap, minArea, index;\n        minOverlap = minArea = Infinity;\n        for (i = m; i <= M - m; i++) {\n            bbox1 = distBBox(node, 0, i, this.toBBox);\n            bbox2 = distBBox(node, i, M, this.toBBox);\n            overlap = intersectionArea(bbox1, bbox2);\n            area = bboxArea(bbox1) + bboxArea(bbox2);\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n                minArea = area < minArea ? area : minArea;\n            }\n            else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n        return index;\n    },\n    // sorts node children by the best axis for split\n    _chooseSplitAxis: function (node, m, M) {\n        var compareMinX = node.leaf ? this.compareMinX : compareNodeMinX, compareMinY = node.leaf ? this.compareMinY : compareNodeMinY, xMargin = this._allDistMargin(node, m, M, compareMinX), yMargin = this._allDistMargin(node, m, M, compareMinY);\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin)\n            node.children.sort(compareMinX);\n    },\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin: function (node, m, M, compare) {\n        node.children.sort(compare);\n        var toBBox = this.toBBox, leftBBox = distBBox(node, 0, m, toBBox), rightBBox = distBBox(node, M - m, M, toBBox), margin = bboxMargin(leftBBox) + bboxMargin(rightBBox), i, child;\n        for (i = m; i < M - m; i++) {\n            child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n        for (i = M - m - 1; i >= m; i--) {\n            child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n        return margin;\n    },\n    _adjustParentBBoxes: function (bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (var i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    },\n    _condense: function (path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (var i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n                }\n                else\n                    this.clear();\n            }\n            else\n                calcBBox(path[i], this.toBBox);\n        }\n    },\n    _initFormat: function (format) {\n        // data format (minX, minY, maxX, maxY accessors)\n        // uses eval-type function compilation instead of just accepting a toBBox function\n        // because the algorithms are very sensitive to sorting functions performance,\n        // so they should be dead simple and without inner calls\n        var compareArr = ['return a', ' - b', ';'];\n        this.compareMinX = new Function('a', 'b', compareArr.join(format[0]));\n        this.compareMinY = new Function('a', 'b', compareArr.join(format[1]));\n        this.toBBox = new Function('a', 'return {minX: a' + format[0] +\n            ', minY: a' + format[1] +\n            ', maxX: a' + format[2] +\n            ', maxY: a' + format[3] + '};');\n    }\n};\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn)\n        return items.indexOf(item);\n    for (var i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i]))\n            return i;\n    }\n    return -1;\n}\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode)\n        destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n    for (var i = k, child; i < p; i++) {\n        child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n    return destNode;\n}\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\nfunction bboxArea(a) { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n        (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\nfunction intersectionArea(a, b) {\n    var minX = Math.max(a.minX, b.minX), minY = Math.max(a.minY, b.minY), maxX = Math.min(a.maxX, b.maxX), maxY = Math.min(a.maxY, b.maxY);\n    return Math.max(0, maxX - minX) *\n        Math.max(0, maxY - minY);\n}\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n        a.minY <= b.minY &&\n        b.maxX <= a.maxX &&\n        b.maxY <= a.maxY;\n}\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n        b.minY <= a.maxY &&\n        b.maxX >= a.minX &&\n        b.maxY >= a.minY;\n}\nfunction createNode(children) {\n    return {\n        children: children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\nfunction multiSelect(arr, left, right, n, compare) {\n    var stack = [left, right], mid;\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n        if (right - left <= n)\n            continue;\n        mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n        stack.push(left, mid, mid, right);\n    }\n}\n//# sourceMappingURL=index.js.map","import { nonNull } from \"commons/prelude\";\nimport * as brect from \"math/bbox\";\nimport KDBush from 'vendor/kdbush/index.js';\nimport { rbush } from 'vendor/rbush/index.js';\nexport class Proximity {\n    constructor(maxRadius, bodies, srcBodies = bodies) {\n        this.bodies = bodies;\n        this.srcBodies = srcBodies;\n        this.points = [];\n        this.indexMap = new Map();\n        if (typeof (maxRadius) === 'number')\n            this.maxRadius = maxRadius;\n        else\n            this.maxRadiusFn = maxRadius;\n    }\n    forEach(interFn) {\n        const points = this.points;\n        points.length = 0;\n        const indexMap = this.indexMap;\n        indexMap.clear();\n        let idx = 0;\n        for (const b of this.bodies) {\n            indexMap.set(idx, b);\n            idx++;\n            points.push(b.phys.coords);\n        }\n        const tree = new KDBush(points);\n        let r = this.maxRadius;\n        const rfn = this.maxRadiusFn;\n        const result = [];\n        for (const b of this.srcBodies) {\n            result.length = 0;\n            const pt = b.phys.coords;\n            if (rfn !== undefined)\n                r = rfn(b);\n            tree.within(pt[0], pt[1], r, result);\n            if (result.length !== 0) {\n                for (const idx of result) {\n                    const other = nonNull(indexMap.get(idx), \"body by index\");\n                    if (other !== b)\n                        interFn(b, other);\n                }\n            }\n        }\n    }\n}\nexport class CollideProps {\n    constructor(_b) {\n        this._b = _b;\n        this.box = brect.create();\n        this._step = 0;\n        this.minX = 0;\n        this.minY = 0;\n        this.maxX = 0;\n        this.maxY = 0;\n    }\n    _calcBox(step) {\n        if (step === this._step)\n            return this;\n        this._step = step;\n        const b = this._b;\n        const sz = b.collideSize;\n        if (sz !== undefined) {\n            const r = this.box;\n            brect.setCenterVec(r, b.phys.coords, sz);\n            this.minX = r[0];\n            this.minY = r[1];\n            this.maxX = r[2];\n            this.maxY = r[3];\n        }\n        return this;\n    }\n}\nexport class RectCollisions {\n    constructor(world, bodies, srcBodies = bodies) {\n        this.world = world;\n        this.bodies = bodies;\n        this.srcBodies = srcBodies;\n        this.items = [];\n    }\n    forEach(interact) {\n        const tree = new rbush();\n        const items = this.items;\n        items.length = 0;\n        const step = this.world.step;\n        for (const b of this.bodies) {\n            const p = b.collide;\n            if (p === undefined)\n                continue;\n            items.push(p._calcBox(step));\n        }\n        if (items.length === 0)\n            return;\n        tree.load(items);\n        const found = [];\n        for (const b of this.srcBodies) {\n            const p = b.collide;\n            if (p === undefined)\n                continue;\n            found.length = 0;\n            tree.search(p._calcBox(step), found);\n            for (const f of found) {\n                if (f._b === b)\n                    continue;\n                interact(b, f._b);\n            }\n        }\n    }\n}\n/**\n * Inefficient/quadratic \"detector\". Prefer \"Proximity\" if possible.\n */\nexport class EachWithEach {\n    constructor(bodies, srcBodies = bodies) {\n        this.bodies = bodies;\n        this.srcBodies = srcBodies;\n        this.noDedup = true;\n        this.set = new Set();\n    }\n    forEach(interact) {\n        const set = this.set;\n        set.clear();\n        for (const src of this.srcBodies) {\n            for (const b of this.bodies) {\n                if (src !== b && !set.has(b.phys.id)) {\n                    interact(src, b);\n                }\n            }\n            set.add(src.phys.id);\n        }\n    }\n}\n//# sourceMappingURL=detector.js.map","export * from './world';\nexport * from './body';\nexport * from './detector';\nexport * from './interact';\n//# sourceMappingURL=phys.js.map","export function filterView(it, filter) {\n    return new FilterView(it, filter);\n}\nexport function filterViewCast(it, filter) {\n    return new FilterView(it, filter);\n}\nclass FilterView {\n    constructor(it, filter) {\n        this.it = it;\n        this.filter = filter;\n    }\n    *[Symbol.iterator]() {\n        const f = this.filter;\n        for (let e of this.it) {\n            if (f(e))\n                yield e;\n        }\n    }\n}\n//# sourceMappingURL=collections.js.map","import * as brect from \"math/bbox\";\nimport { VelMods } from 'phys/body';\nimport { MutualForce } from 'phys/interact';\nimport { CollideProps, ElasticCollideCalc, PointMass, Proximity, RectCollisions, World } from 'phys/phys';\nimport { filterViewCast } from \"commons/collections\";\nimport * as vec from \"math/vec2\";\nclass TheBody {\n    constructor(w, radius) {\n        this.id = 0;\n        this.red = false;\n        this.isNew = false;\n        this.w = w;\n        const kind = \"rect\";\n        const r = radius ? radius : w.rng.int(2, 8);\n        this.red = r <= 5;\n        // let r1 = w.rng.number(9, 15)\n        this.r = r;\n        this.collideSize = [r, r];\n        this.collide = new CollideProps(this);\n        this.phys = new PointMass({\n            coords: w.rngCoords(),\n            vel: vec.scaleBy(vec.setRand1(w.rng, vec.create()), 2),\n            mass: r * r / 80\n        });\n    }\n    shapeInit(two) {\n        const rng = this.w.rng;\n        const r = two.makeCircle(this.phys.coords[0], this.phys.coords[1], this.r * 0.7);\n        // let r = two.makeRectangle(this.phys.coords[0], this.phys.coords[1], this.collide.size[0], this.collide.size[1])\n        this.shape = r;\n        r.linewidth = rng.int(1, 2);\n        r.noStroke();\n        if (!this.red)\n            r.fill = 'black';\n        else\n            r.fill = color(world.rng.number(0.85, 1), world.rng.number(0, 0.1), 0);\n    }\n    shapeUpdate(two) {\n        if (!this.shape) {\n            this.shapeInit(two);\n        }\n        const t = this.shape.translation;\n        // console.log(\"PHYS\", this.phys.coords, this.phys.vel)\n        const [x, y] = this.phys.coords;\n        if (isNaN(x) || isNaN(y)) {\n            console.log(\"NaN bode = \", this.id, this.phys.coords, this.phys.vel, this.phys.force);\n        }\n        t.set(this.phys.coords[0], this.phys.coords[1]);\n    }\n    onBeforeMove(p) {\n        /*\n        if (p.step % 60 === 0 && (this.id === 10)) {\n            this.phys.mass = 100\n            this.phys.applyForce(vec.setRandLen(this.w.rng, vec.create(), 40, 50))\n        }*/\n    }\n}\nconst collideSet = new Set();\nlet world;\nexport function runSceneProximal(two, opts) {\n    const N = 1500;\n    const w = new World({\n        size: [opts.w, opts.h]\n    });\n    world = w;\n    w.massCoef = 0.2;\n    w.velModifier = VelMods.compose(VelMods.friction(0, 0.0001), VelMods.friction(1, 0.1));\n    for (let i = 0; i < N; i++) {\n        const b = new TheBody(w);\n        w.add(b);\n        b.shapeInit(two);\n    }\n    const nonCollidingBodies = filterViewCast(w.bodies, b => !collideSet.has(b.phys.id));\n    w.addInteraction({\n        before() {\n            collideSet.clear();\n        },\n        detect: new RectCollisions(w, w.bodies),\n        interact: impulseCollide(w.rng)\n    });\n    w.addInteraction({\n        detect: new Proximity(20, nonCollidingBodies),\n        interact: vanDerVaals(w.rng),\n    });\n    two.bind('update', () => {\n        const dt = 0.07;\n        for (let s = 0; s < 1; s++) {\n            w.nextStep(dt);\n        }\n        for (const _b of w.bodies) {\n            const b = _b;\n            b.shapeUpdate(two);\n        }\n    }).play();\n}\nfunction vanDerVaals(rng) {\n    const mf = new MutualForce(rng);\n    return function (a, b) {\n        if (a.red !== b.red) {\n            mf.init(a, b);\n            const d = mf.dist;\n            mf.apply(-1); // -04\n        }\n    };\n}\nconst distVec = vec.create();\nfunction impulseCollide(rng) {\n    const r = brect.create();\n    const mf = new MutualForce(rng);\n    const collide = new ElasticCollideCalc(rng);\n    return function (a, b) {\n        const ok = brect.intersect(a.collide.box, b.collide.box, r);\n        if (!ok) {\n            console.log(\"rects do not intersect\", a.collide.box, b.collide.box);\n            return;\n        }\n        vec.subtract(distVec, a.phys.coords, b.phys.coords);\n        const d = (a.r + b.r) - vec.len(distVec);\n        if (d < -0.2) {\n            return;\n        }\n        if (d < 0.5) {\n            collide.nonCentral(a.phys, b.phys);\n        }\n        else {\n            collideSet.add(a.id).add(b.id);\n            collide.central(a.phys, b.phys);\n            mf.init(a, b);\n            mf.apply(-0.5);\n            //collide.central(a.phys, b.phys)\n        }\n        //g.add(a.id, b.id)\n    };\n}\nfunction color(r, g, b) {\n    return 'rgb(' + (Math.floor(r * 256)) + ',' + (Math.floor(g * 256)) + ',' + (Math.floor(b * 256)) + ')';\n}\n//# sourceMappingURL=proximal.js.map","import { Random } from 'math/Random';\nimport * as vec from 'math/vec2';\nimport { runSceneProximal } from 'scenes/proximal';\nimport Two from 'two';\nimport { Types as TwoTypes } from 'two';\nconst rng = new Random();\nwindow.addEventListener('DOMContentLoaded', function () {\n    draw();\n}, true);\nfunction draw() {\n    const elem = document.getElementById('scene_1');\n    console.log('elem', elem);\n    const width = 400, height = 400;\n    const bounds = vec.mk(width, height);\n    const two = new Two({ width, height, type: TwoTypes.svg }).appendTo(elem);\n    runSceneProximal(two, {\n        bodies: 300,\n        w: width, h: height\n    });\n}\n//# sourceMappingURL=index.js.map"],"names":["glMatrix.ARRAY_TYPE","degree","glMatrix.setMatrixArrayType","create","dot","vec.dot","scale","vec.scale","subtract","vec.subtract","negate","vec.negate","normalize","vec.normalize","len","vec.len","set","copy","vec.create","clone","vec.cloneOr0","vec.inc","vec.isZero","vec.scaleBy","vec.incScale","vec.setRand1","vec.setLen","vec.neg","vec.copy","vec.clone","vec.set","sort","this","brect.create","brect.setCenterVec","brect.intersect","Two","TwoTypes"],"mappings":"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"}